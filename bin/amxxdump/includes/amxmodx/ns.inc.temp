#if defined NS_INC
#endinput
#endif
#define NS_INC
#pragma reqlib ns
#if !defined AMXMODX_NOAUTOLOAD
#pragma loadlib ns
#endif
#include <ns_const>
forward client_changeclass(id, newclass, oldclass);
forward client_built(idPlayer, idStructure, type, impulse);
native ns_is_combat();
native NSGameplay:ns_get_gameplay();
native ns_get_user_team(id, buff[], len);
native ns_popup(target, const szMsg[180], ah=0);
native ns_set_player_model(id, const szModel[]="");
native ns_set_player_skin(id, skin=-1);
native ns_set_player_body(id, body=-1);
native ns_set_speedchange(id, speedchange=0);
native ns_get_speedchange(id);
native ns_get_maxspeed(id);
native ns_get_mask(id,mask);
native ns_set_mask(id,mask,value);
native ns_get_build(const classname[],builtOnly=1,Number=0);
native ns_has_weapon(id,weapon,setweapon=-1);
native ns_get_spawn(team,number=0,Float:ret[3]);
native ns_get_class(id);
native Float:ns_get_jpfuel(id);
native ns_set_jpfuel(id, Float:fuel);
native Float:ns_add_jpfuel(id, Float:amount);
native Float:ns_get_energy(id);
native ns_set_energy(id, Float:energy);
native Float:ns_add_energy(id, Float:amount);
native Float:ns_get_res(id);
native ns_set_res(id, Float:res);
native Float:ns_add_res(id, Float:amount);
native Float:ns_get_teamres(Team);
native ns_set_teamres(Team, Float:value);
native Float:ns_add_teamres(Team,Float:value);
native Float:ns_get_exp(id);
native ns_set_exp(id,Float:exp);
native Float:ns_add_exp(id, Float:value);
native ns_get_points(id);
native ns_set_points(id, points);
native ns_add_points(id,points);
native Float:ns_get_weap_dmg(idWeapon);
native ns_set_weap_dmg(idWeapon, Float:damage);
native Float:ns_get_weap_range(idWeapon);
native ns_set_weap_range(idWeapon, Float:range);
native ns_get_weap_clip(idWeapon);
native ns_set_weap_clip(idWeapon, clipsize);
native ns_get_weap_reserve(id,weapon);
native ns_set_weap_reserve(id,weapon,ammo);
native ns_get_score(idPlayer);
native ns_set_score(idPlayer, score);
native ns_add_score(idPlayer,score);
native ns_get_deaths(idPlayer);
native ns_set_deaths(idPlayer,numdeaths);
native ns_add_deaths(idPlayer,numdeaths);
native ns_get_struct_owner(idStructsure);
native ns_set_struct_owner(idStructure,indexOwner);
native ns_get_hive_trait(idHive);
native ns_set_hive_trait(idHive,trait);
native ns_set_fov(idPlayer,Float:_fov=0.0);
native ns_give_item(id, const class[]);
native ns_get_hive_ability(idPlayer, ability=0);
forward client_changeteam(id, newteam, oldteam);
forward client_spawn(id);
#pragma deprecated It is suggested to use hamsandwich for this action instead.
native ns_takedamage(IDVictim, IDInflictor, IDAttacker, Float:Damage, DamageType);
native ns_unstick_player(id, StartDistance=32, MaxAttempts=128);
native bool:ns_round_in_progress();
forward round_start();
forward round_end(Float:roundtime);
forward map_reset(isload);
native ns_get_weapon(idPlayer,weaponid,&weapontype=0);
native ns_get_locationname(Float:x, Float:y, name[], len, titlelookup=0);
native ns_lookup_title(const KeyName[], Output[], length);
native ns_build_structure(idStructure);
native ns_recycle(idStructure);
native ns_finish_weldable(idWeldable);
native Float:ns_get_weld_time(idWeldable);
native ns_set_weld_time(idWeldable,Float:value);
native Float:ns_add_weld_time(idWeldable,Float:value);
native Float:ns_get_weld_done(idWeldable);
native ns_set_weld_done(idWeldable,Float:value);
native Float:ns_add_weld_done(idWeldable,Float:value);
native Float:ns_get_obs_energy(idObs);
native ns_set_obs_energy(idObs,Float:value);
native Float:ns_add_obs_energy(idObs,Float:value);
native ns_remove_upgrade(idPlayer, upgrade);
native RawPS:ns_create_ps();
native ns_set_ps_name(RawPS:system, const name[]);
native ns_set_ps_sprite(RawPS:system, const sprite[]);
native Particle:ns_spawn_ps(RawPS:system);
native ns_fire_ps(Particle:system,const Float:origin[3],const Float:angles[3]={0.0,0.0,0.0}, flags=0);
native Particle:ns_get_ps_id(const Name[]);
native ns_set_ps_genrate(RawPS:system, genrate);
native ns_set_ps_genshape(RawPS:system, NSPS_GenShape:genshape);
native ns_set_ps_genshape_params(RawPS:system, const params[]);
native ns_set_ps_spriteframes(RawPS:system, spriteframes);
native ns_set_ps_numparticles(RawPS:system, numparticles);
native ns_set_ps_size(RawPS:system, Float:size);
native ns_set_ps_vel_params(RawPS:system, const params[]);
native ns_set_ps_vel_shape(RawPS:system, NSPS_VelShape:shape);
native ns_set_ps_sys_life(RawPS:system, Float:lifetime);
native ns_set_ps_particle_life(RawPS:system, Float:lifetime);
native ns_set_ps_rendermode(RawPS:system, NSPS_RenderMode:rendermode);
native ns_set_ps_to_gen(RawPS:system, const name[]);
native ns_set_ps_anim_speed(RawPS:system, speed);
native ns_set_ps_spawn_flags(RawPS:system, NSPS_Flags:flags);
native ns_set_ps_base_color(RawPS:system, const colors[]);
native ns_set_ps_scale(RawPS:system, Float:scale);
native ns_set_ps_max_alpha(RawPS:system, Float:maxalpha);
