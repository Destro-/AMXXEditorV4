#if defined _tsx_included
#endinput
#endif
#define _tsx_included
#include <tsstats>
#pragma reqclass xstats
#if !defined AMXMODX_NOAUTOLOAD
#pragma defclasslib xstats tsx
#endif
enum {
XMF_DAMAGE = 0,
XMF_DEATH,
};
native register_statsfwd( ftype );
forward client_damage(attacker,victim,damage,wpnindex,hitplace,TA);
forward client_death(killer,victim,wpnindex,hitplace,TK);
native custom_weapon_add( const wpnname[],melee = 0,const logname[]="" ); 
native custom_weapon_dmg( weapon, att, vic, damage, hitplace=0 ); 
native custom_weapon_shot( weapon,index ); native xmod_is_melee_wpn(wpnindex);
native xmod_get_wpnname(wpnindex,name[],len);
native xmod_get_wpnlogname(wpnindex,name[],len);
native xmod_get_maxweapons();
native xmod_get_stats_size();
native xmod_is_custom_wpn(wpnindex);
stock ts_weaponspawn(const weaponid[], const duration[], const extraclip[], const spawnflags[], const Float:Origin[3])
{
new ent = create_entity("ts_groundweapon");
DispatchKeyValue(ent, "tsweaponid", weaponid);
DispatchKeyValue(ent, "wduration", duration);
DispatchKeyValue(ent, "wextraclip", extraclip);
DispatchKeyValue(ent, "spawnflags", spawnflags);
DispatchSpawn(ent);
entity_set_origin(ent, Origin);
return PLUGIN_HANDLED;
}
